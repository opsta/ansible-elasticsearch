---

- name: Wait for Elasticsearch service to become available
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 9200
    delay: 5
  when: inventory_hostname in groups['elasticsearch-master'] or groups['elasticsearch'] | length == 1

- name: Activate Elasticsearch license (SSL disabled)
  uri:
    method: PUT
    url: "http://{{ ansible_default_ipv4.address }}:9200/_xpack/license?acknowledge=true"
    body_format: json
    body: "{{ lookup('file', elasticsearch_host_license_file_path )  }}"
    return_content: yes
  register: elasticsearch_license_activated
  when: 
    - not elasticsearch_ssl_enabled
    - inventory_hostname in groups['elasticsearch-master'] or groups['elasticsearch'] | length == 1
  failed_when: 
    elasticsearch_license_activated.status != 200 or
    elasticsearch_license_activated.json.license_status is not defined or
    elasticsearch_license_activated.json.license_status != 'valid'

- name: Activate Elasticsearch license (SSL HTTP disabled)
  uri:
    method: PUT
    url: "http://{{ ansible_fqdn }}:9200/_xpack/license?acknowledge=true"
    body_format: json
    body: "{{ lookup('file', elasticsearch_host_license_file_path )  }}"
    return_content: yes
    user: "{{ elasticsearch_xpack_username | default('elastic') }}"
    password: "{{ elasticsearch_xpack_password | default('changeme') }}"
  register: elasticsearch_license_activated
  when:
    - elasticsearch_ssl_enabled and not elasticsearch_ssl_http_enabled
    - inventory_hostname in groups['elasticsearch-master'] or groups['elasticsearch'] | length == 1
  failed_when: 
    elasticsearch_license_activated.status != 200 or
    elasticsearch_license_activated.json.license_status is not defined or
    elasticsearch_license_activated.json.license_status != 'valid'

- name: Activate Elasticsearch license (SSL HTTP enabled)
  uri:
    method: PUT
    url: "https://{{ ansible_fqdn }}:9200/_xpack/license?acknowledge=true"
    body_format: json
    body: "{{ lookup('file', elasticsearch_host_license_file_path )  }}"
    return_content: yes
    user: "{{ elasticsearch_xpack_username | default('elastic') }}"
    password: "{{ elasticsearch_xpack_password | default('changeme') }}"
    validate_certs: no
  register: elasticsearch_license_activated
  when:
    - elasticsearch_ssl_enabled and elasticsearch_ssl_http_enabled
    - inventory_hostname in groups['elasticsearch-master'] or groups['elasticsearch'] | length == 1
  ignore_errors: true
  failed_when: 
    elasticsearch_license_activated.status != 200 or
    elasticsearch_license_activated.json.license_status is not defined or
    elasticsearch_license_activated.json.license_status != 'valid'
